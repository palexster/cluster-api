name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write # Allow to create a release.

jobs:
  build:
    name: create draft release
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run:  echo "RELEASE_TAG=${GITHUB_REF:10}" >> $GITHUB_ENV
      - name: checkout code
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # tag=v3.2.0
        with:
          fetch-depth: 0
      - name: Install go
        uses: actions/setup-go@d0a58c1c4d2b25278816e339b944508c875f3613 # tag=v3.4.0
        with:
          go-version: '^1.19'
      - name: generate release artifacts
        run: |
          export REGISTRY=docker.io/mesosphere
          export PROD_REGISTRY=$REGISTRY
          export STAGING_REGISTRY=$REGISTRY
          export TAG=${{ env.RELEASE_TAG }}
          make release
      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # tag=v1
        with:
          draft: true
          files: out/*
          body_path: _releasenotes/${{ env.RELEASE_TAG }}.md
      - name: Login to Dockerhub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}
      - name: Build and push docker images
        run: |
          export REGISTRY=docker.io/mesosphere
          export PROD_REGISTRY=$REGISTRY
          export STAGING_REGISTRY=$REGISTRY
          export TAG=${{ env.RELEASE_TAG }}
          make ALL_ARCH="amd64 arm64" docker-build-all
          make ALL_ARCH="amd64 arm64" docker-push-all
